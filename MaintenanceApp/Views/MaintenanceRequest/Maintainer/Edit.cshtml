@model MaintenanceApp.Models.RequestMaintenanceModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<form asp-action="MaintainerSubmitEdit" asp-controller="MaintenanceRequest" method="POST">
    <ul class="validation-summary-errors"></ul>
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="@Model.Id" />

    <div class="container">
        <h4 class="text-center mb-4">REQUEST FOR MAINTENANCE ACTION</h4>
        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Request No</label>
                <input class="form-control" value="@Model.Id" type="text" disabled />
            </div>
            <div class="col-md-6">
                <label class="form-label" for="@Model.RequestDate">Date</label>
                <input class="form-control" type="date" asp-for="@Model.RequestDate" disabled />
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.RequestDate)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Request status</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" asp-for="@Model.RequestStatus" value="Normal" id="Normal" disabled />
                    <label class="form-check-label" for="Normal">Normal</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" asp-for="@Model.RequestStatus" value="Urgent" id="Urgent" disabled  />
                    <label class="form-check-label" for="Urgent">Urgent</label>
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Request for</label>
                @for (int i = 0; i < Model.phraseModel.Count; i++)
                {
                    if (Model.phraseModel[i].Category == "Request For")
                    {
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" name="RequestFor" value="@Model.phraseModel[i].Phrase" id="RequestFor_@i" disabled
                            @(Model.phraseModel[i].IsChecked ? "checked" : "") />
                            <label class="form-check-label" for="RequestFor_@i">@Model.phraseModel[i].Phrase</label>
                        </div>
                    }

                }
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Machine Status</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" asp-for="@Model.MachineState" value="Running" id="MachineRunning" disabled />
                    <label class="form-check-label" for="MachineRunning">Running</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" asp-for="@Model.MachineState" value="Idle" id="MachineIdle" disabled />
                    <label class="form-check-label" for="MachineIdle">Idle</label>
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Department/Section</label>
                <input class="form-control" type="text" asp-for="Department" disabled />
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label class="form-label" for="RequestedBy">Requested By</label>
                <input class="form-control" type="text" asp-for="RequestedBy" disabled />
  
            </div>
            <div class="col-md-4">
                <label class="form-label" for="ReceivedBy">Received By</label>
                <input class="form-control" type="text" asp-for="ReceivedBy" disabled />
                <label class="form-label" for="ReceivedTime">Received Time</label>
                <input class="form-control" type="time" asp-for="ReceivedTime" disabled />
            </div>
            <div class="col-md-4">
                <label class="form-label" for="Machine">Machine</label>
                <input class="form-control" type="text" asp-for="Machine" disabled />
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="mb-3">
                    <label for="Description" class="form-label">Description of Problem (To be filled by Initiator)</label>
                    <textarea class="form-control" asp-for="Description" rows="3" disabled></textarea>
                    <div class="text-danger">
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <!-- Proposed Action -->
                <div class="mb-3">
                    <label for="Proposal" class="form-label">Your Proposed Action (If required, To be filled by Initiator)</label>
                    <textarea class="form-control" asp-for="Proposal" rows="3" disabled></textarea>
                    <div class="text-danger">
                        @Html.ValidationMessageFor(model => model.Proposal)
                    </div>
                </div>
                <div class="mb-3">
                    <p class="form-label">Review of Problem (To be filled by the Maintenance Section)</p>
                    <div>
                        @for (int i = 0; i < Model.phraseModel.Count; i++)
                        {
                            if (Model.phraseModel[i].Category == "Review of Problems")
                            {
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="ReviewOfProblem" value="@Model.phraseModel[i].Phrase" id="ReviewOfProblem_@i"
                                    @(Model.phraseModel[i].IsChecked ? "checked" : "") />
                                    <label class="form-check-label" for="ReviewOfProblem_@i">@Model.phraseModel[i].Phrase</label>
                                </div>
                            }

                        }
                        <span class="text-danger" asp-validation-for="ReviewOfProblem"></span>
                        @Html.ValidationMessageFor(model => model.ReviewOfProblem)
                    </div>
                </div>
                <div class="mb-3">
                    <label for="ReviewRemarks" class="form-label">Remarks</label>
                    <textarea class="form-control" asp-for="ReviewRemarks" rows="2"></textarea>
                    @Html.ValidationMessageFor(model => model.ReviewRemarks)
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>
@* <script>
                        $(document).ready(function () {
    $("form").submit(function (e) {
        e.preventDefault();  // Prevent the default form submission

        var form = $(this);
        var formData = form.serialize();  // Serialize the form data

        // Make an AJAX request to submit the form
        $.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            data: formData,
            success: function (response) {
                if (response.errors) {
                    // Clear previous error messages
                    $(".validation-summary-errors").empty();

                    // Display new error messages
                    response.errors.forEach(function (error) {
                        $(".validation-summary-errors").append("<li>" + error + "</li>");
                    });

                    // Optionally, highlight the fields that are invalid
                    // Example: Highlight the checkbox group if it has an error
                    if (response.errors.includes("At least one option must be selected.")) {
                        // Add error class to the relevant input or label
                        $("input[name='ReviewOfProblem']").addClass("is-invalid");
                            $("input[name='ReviewRemarks']").addClass("is-invalid");
                    }
                }
            }
        });
    });
});
</script> *@